GENERATOR:
  PackageName: github.com/broadcastervc/ndigo
  PackageDescription: "Package NDI provides go bindings for the Newtek NDI SDK"
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  #PkgConfigOpts: [ndi]
  Includes:
    - include/Processing.NDI.Lib.h
  SysIncludes:
    - stdlib.h
  Options:
    SafeStrings: true
  FlagGroups:
    - name: LDFLAGS
      traits: ["linux"]
      flags:
        - -L/usr/local/lib
        - -lndi
    - name: LDFLAGS
      traits: ["darwin"]
      flags:
        - -Wl,-rpath,/Library/NDI\ SDK\ for\ Apple/lib/macOS
        - -L/Library/NDI\ SDK\ for\ Apple/lib/macOS
        - -lndi
    - name: LDFLAGS
      traits: ["windows"]
      flags:
        - -LC:\Program^ Files\NDI\NDI^ 5^ Runtime\v5
        - -lProcessing.NDI.Lib.x64


PARSER:
  IncludePaths:
    - /usr/include
    - /usr/local/include
    - /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include
    - /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/
    - /Library/NDI\ SDK\ for\ Apple/include
  SourcesPaths:
    - include/Processing.NDI.Lib.h
  Arch: aarch64

TRANSLATOR:
  ConstCharIsString: true
  ConstUCharIsString: false
  ConstRules:
    defines: eval
    enum: eval
  Rules:
    type:
      - { action: replace, from: "_e$" }
      - { action: replace, from: "_t$", to: "Type" }
    global:
      - { action: replace, from: "^NDIlib_" }
      - { action: accept, from: "^NDIlib_" }
      - { transform: export }
    #    const:
    #      - {action: accept, from: "^OV_"}
    #      - {action: replace, from: "^ov_", to: _}
    #    type:
    #      - {action: replace, from: "_t$"}
    private:
      - { transform: unexport }
    post-global:
      - { action: replace, from: _$ }
      - { load: snakecase }
  PtrTips:
    struct:
      - { target: NDIlib_metadata_frame_t, tips: [ 0,0,ref ] }
      - { target: NDIlib_video_frame_t, tips: [ 0,0,0,0,0,0,0,0,ref,0 ] }
      - { target: NDIlib_video_frame_v2_t, tips: [ 0,0,0,0,0,0,0,0,ref,0,0 ] }
      - { target: NDIlib_audio_frame_t, tips: [ 0,0,0,0,ref,0 ] }
      - { target: NDIlib_audio_frame_v2_t, tips: [ 0,0,0,0,ref,0,0,0 ] }
      - { target: NDIlib_audio_frame_v3_t, tips: [ 0,0,0,0,0,ref,0,0 ] }
      - { target: NDIlib_audio_frame_interleaved_16s_t, tips: [ 0,0,0,0,0,ref ] }
      - { target: NDIlib_audio_frame_interleaved_32s_t, tips: [ 0,0,0,0,0,ref ] }
      - { target: NDIlib_audio_frame_interleaved_32f_t, tips: [ 0,0,0,0,ref ] }
      - { target: NDIlib_tally_t, tips: [ 0,ref,0 ] }
    function:
      # this covers all other cases
      - { target: ^NDIlib, tips: [ sref,sref,sref,sref,sref,sref,sref,sref ] }

