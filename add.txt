
type SourceType2 C.NDIlib_source_t

func (t SourceType2) Name() string {
	return C.GoString(t.p_ndi_name)
}

func (t SourceType2) URLAddress() string {
	return C.GoString(*(**C.char)(unsafe.Pointer(&t.anon0)))
}

func FindGetCurrentSources2(instance FindInstanceType) []*SourceType2 {
	var pNoSources C.uint32_t
	pSources := C.NDIlib_find_get_current_sources(C.NDIlib_find_instance_t(instance), &pNoSources)
	if pNoSources == 0 {
		return nil
	}
	sources := (*[1 << 28]C.NDIlib_source_t)(unsafe.Pointer(pSources))[:pNoSources:pNoSources]
	result := make([]*SourceType2, pNoSources)
	for i, source := range sources {
		result[i] = (*SourceType2)(&source)
	}
	return result
}

func FindWaitForSources2(instance FindInstanceType, timeoutInMS uint32) bool {
	return (bool)(C.NDIlib_find_wait_for_sources(C.NDIlib_find_instance_t(instance), C.uint32_t(timeoutInMS)))
}